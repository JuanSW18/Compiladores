package analizador;

import java_cup.runtime.*;
import java.io.FileReader;
import java.io.FileInputStream;
import javafx.scene.control.TextArea;

parser code
{:
    String cad="";
    public String Imprimir(){
        return cad;
    }
    
    
:}

/*Terminales*/
terminal ID, LPARENT, DIF, RPARENT, ASSIGN, EQUALS, MAYOR_IGUAL, MENOR_IGUAL, 
        MAYOR, MENOR, PLUS, TIMES, MINUS, DIVIDE, MOD, SI, s_end, w, w_end, 
        read, write, llaveI, llaveD, corcheteI, corcheteD, tipo_dato, coma, Num, cadena;

terminal INICIO, FIN;

/*No terminales*/
non terminal Declaracion, list_var, var, inicial1, list_Dim, inicial2, list_Num;
non terminal MASTER, OPERADOR, SIGNOS, BLOQUECONDICION, PARAMETRO, BLOQUESI;
non terminal BMIENTRAS, OPERACION, LISTAOPERACION, VALOR, ESCRIBIR, LEER,
                ENTRADA, GENERAL, LISTAGENERAL, TEXTO;

/*Gramatica*/

//{: System.out.println("Regla SS coincidente"); :};

MASTER ::= INICIO LISTAGENERAL FIN 
{: cad+="Regla INICIO ---- FIN detectada\n"; 
    System.out.println("Regla INICIO ---- FIN coincidente"); :};

Declaracion ::= tipo_dato list_var
{: cad+="Regla Declaracion detectada\n";
System.out.println("Regla Declaracion coincidente"); :};

list_var ::= var 
            | var coma list_var
{: cad+="Regla list_var detectada\n";
System.out.println("Regla list_var coincidente"); :};

var ::= ID inicial1 
        | ID 
        | ID list_Dim inicial2 
        | ID list_Dim 
{: cad+="Regla var detectada\n";
System.out.println("Regla var coincidente"); :};

inicial1 ::= ASSIGN Num
{: cad+="Regla inicial1 detectada\n";
System.out.println("Regla inicial1 coincidente"); :};

list_Dim ::= corcheteI Num corcheteD
{: cad+="Regla list_Dim detectada\n";
System.out.println("Regla list_Dim coincidente"); :};

inicial2 ::= ASSIGN llaveI list_Num llaveD
{: cad+="Regla inicial2 detectada\n";
System.out.println("Regla inicial2 coincidente"); :};

list_Num ::= Num 
        | Num coma list_Num
{: cad+="Regla list_Num detectada\n";
System.out.println("Regla list_Num coincidente"); :};

OPERADOR ::= EQUALS | MAYOR_IGUAL | MENOR_IGUAL | MAYOR | MENOR | DIF
{: cad+="Regla OPERADOR detectada\n";
System.out.println("Regla OPERADOR coincidente"); :};

SIGNOS ::=  PLUS | TIMES | MINUS | DIVIDE | MOD
{: cad+="Regla SIGNOS detectada\n";
System.out.println("Regla SIGNOS coincidente"); :};

BLOQUECONDICION ::= LPARENT PARAMETRO RPARENT
{: cad+="Regla BLOQUECONDICION detectada\n";
System.out.println("Regla BLOQUECONDICION coincidente"); :};

PARAMETRO ::= ID OPERADOR Num
            | Num OPERADOR ID
            | ID OPERADOR ID
{: cad+="Regla PARAMETRO detectada\n";
System.out.println("Regla PARAMETRO coincidente"); :}; //FALTAN COMPARACIONES COMPLEJAS

BLOQUESI ::= SI BLOQUECONDICION LISTAGENERAL s_end
{: cad+="Regla BLOQUESI detectada\n";
System.out.println("Regla BLOQUESI coincidente"); :};

BMIENTRAS ::= w BLOQUECONDICION LISTAGENERAL w_end
{: cad+="Regla BMIENTRAS detectada\n";
System.out.println("Regla BMIENTRAS coincidente"); :};

OPERACION ::= ID ASSIGN LISTAOPERACION
{: cad+="Regla OPERACION detectada\n";
System.out.println("Regla OPERACION coincidente"); :};

LISTAOPERACION ::= VALOR | VALOR SIGNOS LISTAOPERACION
{: cad+="Regla LISTAOPERACION detectada\n";
System.out.println("Regla LISTAOPERACION coincidente"); :};

VALOR ::= Num | ID
{: cad+="Regla VALOR detectada\n";
System.out.println("Regla VALOR coincidente"); :};

ESCRIBIR ::= write TEXTO
{: cad+="Regla ESCRIBIR detectada\n";
System.out.println("Regla ESCRIBIR coincidente"); :};

TEXTO ::= ID | cadena | ID coma TEXTO | cadena coma TEXTO
{: cad+="Regla TEXTO detectada\n";
System.out.println("Regla TEXTO coincidente"); :};

LEER ::= read ENTRADA
{: cad+="Regla LEER detectada\n";
System.out.println("Regla LEER coincidente"); :};

ENTRADA ::= ID | ID coma ENTRADA
{: cad+="Regla ENTRADA detectada\n";
System.out.println("Regla ENTRADA coincidente"); :};

GENERAL ::= Declaracion | OPERACION | LEER | ESCRIBIR | BLOQUESI | BMIENTRAS
{: cad+="Regla GENERAL detectada\n";
System.out.println("Regla GENERAL coincidente"); :};

LISTAGENERAL ::= GENERAL | GENERAL LISTAGENERAL
{: cad+="Regla LISTAGENERAL detectada\n";
System.out.println("Regla LISTAGENERAL coincidente"); :};